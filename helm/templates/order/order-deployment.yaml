apiVersion: apps/v1
kind: Deployment
metadata:
  name: order-api
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      app: order-api
  {{- with .Values.strategy }}
  strategy:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  template:
    metadata:
      labels:
        app: order-api
    spec:
      containers:
        - name: order-api
          image: "ddnhuy/ordering-api:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: 8080
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          envFrom:
            - configMapRef:
                name: order-config
          volumeMounts:
            - name: config-volume
              mountPath: /app/appsettings.json
              subPath: appsettings.json
      initContainers:
        - name: wait-for-sqlserver
          image: busybox
          command: ['sh', '-c', 'until nc -z sqlserver 1433; do echo waiting for postgres; sleep 2; done']
        - name: wait-for-rabbitmq
          image: busybox
          command: ['sh', '-c', 'until nc -z rabbitmq 5672; do echo waiting for rabbitmq; sleep 2; done']
      volumes:
        - name: config-volume
          configMap:
            name: order-config
            items:
              - key: appsettings.json
                path: appsettings.json